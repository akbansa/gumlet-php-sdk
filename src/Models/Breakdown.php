<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models;

use GumletRestApisLib\ApiHelper;
use stdClass;

class Breakdown implements \JsonSerializable
{
    /**
     * @var string
     */
    private $name;

    /**
     * @var string
     */
    private $metric;

    /**
     * @var int|null
     */
    private $page = 1;

    /**
     * @var string|null
     */
    private $search;

    /**
     * @var Sort|null
     */
    private $sort;

    /**
     * @var int|null
     */
    private $pageSize = 10;

    /**
     * @param string $name
     * @param string $metric
     */
    public function __construct(string $name, string $metric)
    {
        $this->name = $name;
        $this->metric = $metric;
    }

    /**
     * Returns Name.
     * The name of a breakdown to get the data for.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     * The name of a breakdown to get the data for.
     *
     * @required
     * @maps name
     * @factory \GumletRestApisLib\Models\Name1Enum::checkValue
     */
    public function setName(string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Metric.
     * Metric for the breakdown data.
     */
    public function getMetric(): string
    {
        return $this->metric;
    }

    /**
     * Sets Metric.
     * Metric for the breakdown data.
     *
     * @required
     * @maps metric
     * @factory \GumletRestApisLib\Models\MetricEnum::checkValue
     */
    public function setMetric(string $metric): void
    {
        $this->metric = $metric;
    }

    /**
     * Returns Page.
     * Request a particular page number for the response.
     */
    public function getPage(): ?int
    {
        return $this->page;
    }

    /**
     * Sets Page.
     * Request a particular page number for the response.
     *
     * @maps page
     */
    public function setPage(?int $page): void
    {
        $this->page = $page;
    }

    /**
     * Returns Search.
     * The API supports partially matching strings.
     */
    public function getSearch(): ?string
    {
        return $this->search;
    }

    /**
     * Sets Search.
     * The API supports partially matching strings.
     *
     * @maps search
     */
    public function setSearch(?string $search): void
    {
        $this->search = $search;
    }

    /**
     * Returns Sort.
     * Sort the response data according to key or value
     */
    public function getSort(): ?Sort
    {
        return $this->sort;
    }

    /**
     * Sets Sort.
     * Sort the response data according to key or value
     *
     * @maps sort
     */
    public function setSort(?Sort $sort): void
    {
        $this->sort = $sort;
    }

    /**
     * Returns Page Size.
     * The number of items returned in a single page. Maximum value can be 100
     */
    public function getPageSize(): ?int
    {
        return $this->pageSize;
    }

    /**
     * Sets Page Size.
     * The number of items returned in a single page. Maximum value can be 100
     *
     * @maps page_size
     */
    public function setPageSize(?int $pageSize): void
    {
        $this->pageSize = $pageSize;
    }

    /**
     * Converts the Breakdown object to a human-readable string representation.
     *
     * @return string The string representation of the Breakdown object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'Breakdown',
            [
                'name' => $this->name,
                'metric' => $this->metric,
                'page' => $this->page,
                'search' => $this->search,
                'sort' => $this->sort,
                'pageSize' => $this->pageSize
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['name']          = Name1Enum::checkValue($this->name);
        $json['metric']        = MetricEnum::checkValue($this->metric);
        if (isset($this->page)) {
            $json['page']      = $this->page;
        }
        if (isset($this->search)) {
            $json['search']    = $this->search;
        }
        if (isset($this->sort)) {
            $json['sort']      = $this->sort;
        }
        if (isset($this->pageSize)) {
            $json['page_size'] = $this->pageSize;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models;

use GumletRestApisLib\ApiHelper;
use stdClass;

class AllSource implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $id;

    /**
     * @var string|null
     */
    private $name;

    /**
     * @var string|null
     */
    private $type;

    /**
     * @var string|null
     */
    private $createdAt;

    /**
     * @var string|null
     */
    private $updatedAt;

    /**
     * @var VideoProtection|null
     */
    private $videoProtection;

    /**
     * @var PlayerConfig|null
     */
    private $playerConfig;

    /**
     * @var string|null
     */
    private $defaultProfileId;

    /**
     * @var string|null
     */
    private $insightPropertyId;

    /**
     * @var Aws|null
     */
    private $aws;

    /**
     * @var EmbedDetails|null
     */
    private $embedDetails;

    /**
     * @var string[]|null
     */
    private $folders;

    /**
     * @var ChannelSettings|null
     */
    private $channelSettings;

    /**
     * Returns Id.
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Name.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     *
     * @maps name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Type.
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     *
     * @maps type
     */
    public function setType(?string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Created At.
     */
    public function getCreatedAt(): ?string
    {
        return $this->createdAt;
    }

    /**
     * Sets Created At.
     *
     * @maps created_at
     */
    public function setCreatedAt(?string $createdAt): void
    {
        $this->createdAt = $createdAt;
    }

    /**
     * Returns Updated At.
     */
    public function getUpdatedAt(): ?string
    {
        return $this->updatedAt;
    }

    /**
     * Sets Updated At.
     *
     * @maps updated_at
     */
    public function setUpdatedAt(?string $updatedAt): void
    {
        $this->updatedAt = $updatedAt;
    }

    /**
     * Returns Video Protection.
     */
    public function getVideoProtection(): ?VideoProtection
    {
        return $this->videoProtection;
    }

    /**
     * Sets Video Protection.
     *
     * @maps video_protection
     */
    public function setVideoProtection(?VideoProtection $videoProtection): void
    {
        $this->videoProtection = $videoProtection;
    }

    /**
     * Returns Player Config.
     */
    public function getPlayerConfig(): ?PlayerConfig
    {
        return $this->playerConfig;
    }

    /**
     * Sets Player Config.
     *
     * @maps player_config
     */
    public function setPlayerConfig(?PlayerConfig $playerConfig): void
    {
        $this->playerConfig = $playerConfig;
    }

    /**
     * Returns Default Profile Id.
     */
    public function getDefaultProfileId(): ?string
    {
        return $this->defaultProfileId;
    }

    /**
     * Sets Default Profile Id.
     *
     * @maps default_profile_id
     */
    public function setDefaultProfileId(?string $defaultProfileId): void
    {
        $this->defaultProfileId = $defaultProfileId;
    }

    /**
     * Returns Insight Property Id.
     */
    public function getInsightPropertyId(): ?string
    {
        return $this->insightPropertyId;
    }

    /**
     * Sets Insight Property Id.
     *
     * @maps insight_property_id
     */
    public function setInsightPropertyId(?string $insightPropertyId): void
    {
        $this->insightPropertyId = $insightPropertyId;
    }

    /**
     * Returns Aws.
     */
    public function getAws(): ?Aws
    {
        return $this->aws;
    }

    /**
     * Sets Aws.
     *
     * @maps aws
     */
    public function setAws(?Aws $aws): void
    {
        $this->aws = $aws;
    }

    /**
     * Returns Embed Details.
     */
    public function getEmbedDetails(): ?EmbedDetails
    {
        return $this->embedDetails;
    }

    /**
     * Sets Embed Details.
     *
     * @maps embed_details
     */
    public function setEmbedDetails(?EmbedDetails $embedDetails): void
    {
        $this->embedDetails = $embedDetails;
    }

    /**
     * Returns Folders.
     *
     * @return string[]|null
     */
    public function getFolders(): ?array
    {
        return $this->folders;
    }

    /**
     * Sets Folders.
     *
     * @maps folders
     *
     * @param string[]|null $folders
     */
    public function setFolders(?array $folders): void
    {
        $this->folders = $folders;
    }

    /**
     * Returns Channel Settings.
     */
    public function getChannelSettings(): ?ChannelSettings
    {
        return $this->channelSettings;
    }

    /**
     * Sets Channel Settings.
     *
     * @maps channel_settings
     */
    public function setChannelSettings(?ChannelSettings $channelSettings): void
    {
        $this->channelSettings = $channelSettings;
    }

    /**
     * Converts the AllSource object to a human-readable string representation.
     *
     * @return string The string representation of the AllSource object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'AllSource',
            [
                'id' => $this->id,
                'name' => $this->name,
                'type' => $this->type,
                'createdAt' => $this->createdAt,
                'updatedAt' => $this->updatedAt,
                'videoProtection' => $this->videoProtection,
                'playerConfig' => $this->playerConfig,
                'defaultProfileId' => $this->defaultProfileId,
                'insightPropertyId' => $this->insightPropertyId,
                'aws' => $this->aws,
                'embedDetails' => $this->embedDetails,
                'folders' => $this->folders,
                'channelSettings' => $this->channelSettings
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->id)) {
            $json['id']                  = $this->id;
        }
        if (isset($this->name)) {
            $json['name']                = $this->name;
        }
        if (isset($this->type)) {
            $json['type']                = $this->type;
        }
        if (isset($this->createdAt)) {
            $json['created_at']          = $this->createdAt;
        }
        if (isset($this->updatedAt)) {
            $json['updated_at']          = $this->updatedAt;
        }
        if (isset($this->videoProtection)) {
            $json['video_protection']    = $this->videoProtection;
        }
        if (isset($this->playerConfig)) {
            $json['player_config']       = $this->playerConfig;
        }
        if (isset($this->defaultProfileId)) {
            $json['default_profile_id']  = $this->defaultProfileId;
        }
        if (isset($this->insightPropertyId)) {
            $json['insight_property_id'] = $this->insightPropertyId;
        }
        if (isset($this->aws)) {
            $json['aws']                 = $this->aws;
        }
        if (isset($this->embedDetails)) {
            $json['embed_details']       = $this->embedDetails;
        }
        if (isset($this->folders)) {
            $json['folders']             = $this->folders;
        }
        if (isset($this->channelSettings)) {
            $json['channel_settings']    = $this->channelSettings;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

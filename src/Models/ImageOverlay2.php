<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models;

use GumletRestApisLib\ApiHelper;
use stdClass;

class ImageOverlay2 implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $url;

    /**
     * @var string|null
     */
    private $verticalAlign;

    /**
     * @var string|null
     */
    private $horizontalAlign;

    /**
     * @var string|null
     */
    private $verticalMargin;

    /**
     * @var string|null
     */
    private $horizontalMargin;

    /**
     * @var string|null
     */
    private $width;

    /**
     * @var string|null
     */
    private $height;

    /**
     * @var bool|null
     */
    private $imageDownloaded = true;

    /**
     * Returns Url.
     */
    public function getUrl(): ?string
    {
        return $this->url;
    }

    /**
     * Sets Url.
     *
     * @maps url
     */
    public function setUrl(?string $url): void
    {
        $this->url = $url;
    }

    /**
     * Returns Vertical Align.
     */
    public function getVerticalAlign(): ?string
    {
        return $this->verticalAlign;
    }

    /**
     * Sets Vertical Align.
     *
     * @maps vertical_align
     */
    public function setVerticalAlign(?string $verticalAlign): void
    {
        $this->verticalAlign = $verticalAlign;
    }

    /**
     * Returns Horizontal Align.
     */
    public function getHorizontalAlign(): ?string
    {
        return $this->horizontalAlign;
    }

    /**
     * Sets Horizontal Align.
     *
     * @maps horizontal_align
     */
    public function setHorizontalAlign(?string $horizontalAlign): void
    {
        $this->horizontalAlign = $horizontalAlign;
    }

    /**
     * Returns Vertical Margin.
     */
    public function getVerticalMargin(): ?string
    {
        return $this->verticalMargin;
    }

    /**
     * Sets Vertical Margin.
     *
     * @maps vertical_margin
     */
    public function setVerticalMargin(?string $verticalMargin): void
    {
        $this->verticalMargin = $verticalMargin;
    }

    /**
     * Returns Horizontal Margin.
     */
    public function getHorizontalMargin(): ?string
    {
        return $this->horizontalMargin;
    }

    /**
     * Sets Horizontal Margin.
     *
     * @maps horizontal_margin
     */
    public function setHorizontalMargin(?string $horizontalMargin): void
    {
        $this->horizontalMargin = $horizontalMargin;
    }

    /**
     * Returns Width.
     */
    public function getWidth(): ?string
    {
        return $this->width;
    }

    /**
     * Sets Width.
     *
     * @maps width
     */
    public function setWidth(?string $width): void
    {
        $this->width = $width;
    }

    /**
     * Returns Height.
     */
    public function getHeight(): ?string
    {
        return $this->height;
    }

    /**
     * Sets Height.
     *
     * @maps height
     */
    public function setHeight(?string $height): void
    {
        $this->height = $height;
    }

    /**
     * Returns Image Downloaded.
     */
    public function getImageDownloaded(): ?bool
    {
        return $this->imageDownloaded;
    }

    /**
     * Sets Image Downloaded.
     *
     * @maps image_downloaded
     */
    public function setImageDownloaded(?bool $imageDownloaded): void
    {
        $this->imageDownloaded = $imageDownloaded;
    }

    /**
     * Converts the ImageOverlay2 object to a human-readable string representation.
     *
     * @return string The string representation of the ImageOverlay2 object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'ImageOverlay2',
            [
                'url' => $this->url,
                'verticalAlign' => $this->verticalAlign,
                'horizontalAlign' => $this->horizontalAlign,
                'verticalMargin' => $this->verticalMargin,
                'horizontalMargin' => $this->horizontalMargin,
                'width' => $this->width,
                'height' => $this->height,
                'imageDownloaded' => $this->imageDownloaded
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->url)) {
            $json['url']               = $this->url;
        }
        if (isset($this->verticalAlign)) {
            $json['vertical_align']    = $this->verticalAlign;
        }
        if (isset($this->horizontalAlign)) {
            $json['horizontal_align']  = $this->horizontalAlign;
        }
        if (isset($this->verticalMargin)) {
            $json['vertical_margin']   = $this->verticalMargin;
        }
        if (isset($this->horizontalMargin)) {
            $json['horizontal_margin'] = $this->horizontalMargin;
        }
        if (isset($this->width)) {
            $json['width']             = $this->width;
        }
        if (isset($this->height)) {
            $json['height']            = $this->height;
        }
        if (isset($this->imageDownloaded)) {
            $json['image_downloaded']  = $this->imageDownloaded;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

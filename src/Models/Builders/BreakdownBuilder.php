<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models\Builders;

use Core\Utils\CoreHelper;
use GumletRestApisLib\Models\Breakdown;
use GumletRestApisLib\Models\Sort;

/**
 * Builder for model Breakdown
 *
 * @see Breakdown
 */
class BreakdownBuilder
{
    /**
     * @var Breakdown
     */
    private $instance;

    private function __construct(Breakdown $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Breakdown Builder object.
     *
     * @param string $name
     * @param string $metric
     */
    public static function init(string $name, string $metric): self
    {
        return new self(new Breakdown($name, $metric));
    }

    /**
     * Sets page field.
     *
     * @param int|null $value
     */
    public function page(?int $value): self
    {
        $this->instance->setPage($value);
        return $this;
    }

    /**
     * Sets search field.
     *
     * @param string|null $value
     */
    public function search(?string $value): self
    {
        $this->instance->setSearch($value);
        return $this;
    }

    /**
     * Sets sort field.
     *
     * @param Sort|null $value
     */
    public function sort(?Sort $value): self
    {
        $this->instance->setSort($value);
        return $this;
    }

    /**
     * Sets page size field.
     *
     * @param int|null $value
     */
    public function pageSize(?int $value): self
    {
        $this->instance->setPageSize($value);
        return $this;
    }

    /**
     * Initializes a new Breakdown object.
     */
    public function build(): Breakdown
    {
        return CoreHelper::clone($this->instance);
    }
}

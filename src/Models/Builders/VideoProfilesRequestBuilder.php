<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models\Builders;

use Core\Utils\CoreHelper;
use GumletRestApisLib\Models\AnimatedGif2;
use GumletRestApisLib\Models\Crop;
use GumletRestApisLib\Models\GenerateSubtitles;
use GumletRestApisLib\Models\ImageOverlay;
use GumletRestApisLib\Models\Pad;
use GumletRestApisLib\Models\TextOverlay;
use GumletRestApisLib\Models\Trim;
use GumletRestApisLib\Models\VideoProfilesRequest;

/**
 * Builder for model VideoProfilesRequest
 *
 * @see VideoProfilesRequest
 */
class VideoProfilesRequestBuilder
{
    /**
     * @var VideoProfilesRequest
     */
    private $instance;

    private function __construct(VideoProfilesRequest $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Video Profiles Request Builder object.
     *
     * @param string $name
     * @param string $format
     */
    public static function init(string $name, string $format): self
    {
        return new self(new VideoProfilesRequest($name, $format));
    }

    /**
     * Sets width field.
     *
     * @param string|null $value
     */
    public function width(?string $value): self
    {
        $this->instance->setWidth($value);
        return $this;
    }

    /**
     * Sets height field.
     *
     * @param string|null $value
     */
    public function height(?string $value): self
    {
        $this->instance->setHeight($value);
        return $this;
    }

    /**
     * Sets resolution field.
     *
     * @param string|null $value
     */
    public function resolution(?string $value): self
    {
        $this->instance->setResolution($value);
        return $this;
    }

    /**
     * Sets crop field.
     *
     * @param Crop|null $value
     */
    public function crop(?Crop $value): self
    {
        $this->instance->setCrop($value);
        return $this;
    }

    /**
     * Sets pad field.
     *
     * @param Pad|null $value
     */
    public function pad(?Pad $value): self
    {
        $this->instance->setPad($value);
        return $this;
    }

    /**
     * Sets trim field.
     *
     * @param Trim|null $value
     */
    public function trim(?Trim $value): self
    {
        $this->instance->setTrim($value);
        return $this;
    }

    /**
     * Sets image overlay field.
     *
     * @param ImageOverlay|null $value
     */
    public function imageOverlay(?ImageOverlay $value): self
    {
        $this->instance->setImageOverlay($value);
        return $this;
    }

    /**
     * Sets text overlay field.
     *
     * @param TextOverlay|null $value
     */
    public function textOverlay(?TextOverlay $value): self
    {
        $this->instance->setTextOverlay($value);
        return $this;
    }

    /**
     * Sets animated gif field.
     *
     * @param AnimatedGif2|null $value
     */
    public function animatedGif(?AnimatedGif2 $value): self
    {
        $this->instance->setAnimatedGif($value);
        return $this;
    }

    /**
     * Sets generate subtitles field.
     *
     * @param GenerateSubtitles|null $value
     */
    public function generateSubtitles(?GenerateSubtitles $value): self
    {
        $this->instance->setGenerateSubtitles($value);
        return $this;
    }

    /**
     * Sets mp 4 access field.
     *
     * @param bool|null $value
     */
    public function mp4Access(?bool $value): self
    {
        $this->instance->setMp4Access($value);
        return $this;
    }

    /**
     * Sets per title encoding field.
     *
     * @param bool|null $value
     */
    public function perTitleEncoding(?bool $value): self
    {
        $this->instance->setPerTitleEncoding($value);
        return $this;
    }

    /**
     * Sets process low resolution input field.
     *
     * @param bool|null $value
     */
    public function processLowResolutionInput(?bool $value): self
    {
        $this->instance->setProcessLowResolutionInput($value);
        return $this;
    }

    /**
     * Sets audio only field.
     *
     * @param bool|null $value
     */
    public function audioOnly(?bool $value): self
    {
        $this->instance->setAudioOnly($value);
        return $this;
    }

    /**
     * Sets enable drm field.
     *
     * @param bool|null $value
     */
    public function enableDrm(?bool $value): self
    {
        $this->instance->setEnableDrm($value);
        return $this;
    }

    /**
     * Initializes a new Video Profiles Request object.
     */
    public function build(): VideoProfilesRequest
    {
        return CoreHelper::clone($this->instance);
    }
}

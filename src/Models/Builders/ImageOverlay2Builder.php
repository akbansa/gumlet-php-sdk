<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models\Builders;

use Core\Utils\CoreHelper;
use GumletRestApisLib\Models\ImageOverlay2;

/**
 * Builder for model ImageOverlay2
 *
 * @see ImageOverlay2
 */
class ImageOverlay2Builder
{
    /**
     * @var ImageOverlay2
     */
    private $instance;

    private function __construct(ImageOverlay2 $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Image Overlay 2 Builder object.
     */
    public static function init(): self
    {
        return new self(new ImageOverlay2());
    }

    /**
     * Sets url field.
     *
     * @param string|null $value
     */
    public function url(?string $value): self
    {
        $this->instance->setUrl($value);
        return $this;
    }

    /**
     * Sets vertical align field.
     *
     * @param string|null $value
     */
    public function verticalAlign(?string $value): self
    {
        $this->instance->setVerticalAlign($value);
        return $this;
    }

    /**
     * Sets horizontal align field.
     *
     * @param string|null $value
     */
    public function horizontalAlign(?string $value): self
    {
        $this->instance->setHorizontalAlign($value);
        return $this;
    }

    /**
     * Sets vertical margin field.
     *
     * @param string|null $value
     */
    public function verticalMargin(?string $value): self
    {
        $this->instance->setVerticalMargin($value);
        return $this;
    }

    /**
     * Sets horizontal margin field.
     *
     * @param string|null $value
     */
    public function horizontalMargin(?string $value): self
    {
        $this->instance->setHorizontalMargin($value);
        return $this;
    }

    /**
     * Sets width field.
     *
     * @param string|null $value
     */
    public function width(?string $value): self
    {
        $this->instance->setWidth($value);
        return $this;
    }

    /**
     * Sets height field.
     *
     * @param string|null $value
     */
    public function height(?string $value): self
    {
        $this->instance->setHeight($value);
        return $this;
    }

    /**
     * Sets image downloaded field.
     *
     * @param bool|null $value
     */
    public function imageDownloaded(?bool $value): self
    {
        $this->instance->setImageDownloaded($value);
        return $this;
    }

    /**
     * Initializes a new Image Overlay 2 object.
     */
    public function build(): ImageOverlay2
    {
        return CoreHelper::clone($this->instance);
    }
}

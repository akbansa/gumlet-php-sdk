<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models\Builders;

use Core\Utils\CoreHelper;
use GumletRestApisLib\Models\VideoPlaylistResponse1;

/**
 * Builder for model VideoPlaylistResponse1
 *
 * @see VideoPlaylistResponse1
 */
class VideoPlaylistResponse1Builder
{
    /**
     * @var VideoPlaylistResponse1
     */
    private $instance;

    private function __construct(VideoPlaylistResponse1 $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Video Playlist Response 1 Builder object.
     */
    public static function init(): self
    {
        return new self(new VideoPlaylistResponse1());
    }

    /**
     * Sets id field.
     *
     * @param string|null $value
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets collection id field.
     *
     * @param string|null $value
     */
    public function collectionId(?string $value): self
    {
        $this->instance->setCollectionId($value);
        return $this;
    }

    /**
     * Sets title field.
     *
     * @param string|null $value
     */
    public function title(?string $value): self
    {
        $this->instance->setTitle($value);
        return $this;
    }

    /**
     * Sets description field.
     *
     * @param string|null $value
     */
    public function description(?string $value): self
    {
        $this->instance->setDescription($value);
        return $this;
    }

    /**
     * Sets player config field.
     *
     * @param array|null $value
     */
    public function playerConfig(?array $value): self
    {
        $this->instance->setPlayerConfig($value);
        return $this;
    }

    /**
     * Initializes a new Video Playlist Response 1 object.
     */
    public function build(): VideoPlaylistResponse1
    {
        return CoreHelper::clone($this->instance);
    }
}

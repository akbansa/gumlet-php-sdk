<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models\Builders;

use Core\Utils\CoreHelper;
use GumletRestApisLib\Models\EmbedDetails;

/**
 * Builder for model EmbedDetails
 *
 * @see EmbedDetails
 */
class EmbedDetailsBuilder
{
    /**
     * @var EmbedDetails
     */
    private $instance;

    private function __construct(EmbedDetails $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Embed Details Builder object.
     */
    public static function init(): self
    {
        return new self(new EmbedDetails());
    }

    /**
     * Sets pixel tags field.
     *
     * @param array|null $value
     */
    public function pixelTags(?array $value): self
    {
        $this->instance->setPixelTags($value);
        return $this;
    }

    /**
     * Sets preload field.
     *
     * @param bool|null $value
     */
    public function preload(?bool $value): self
    {
        $this->instance->setPreload($value);
        return $this;
    }

    /**
     * Sets autoplay field.
     *
     * @param bool|null $value
     */
    public function autoplay(?bool $value): self
    {
        $this->instance->setAutoplay($value);
        return $this;
    }

    /**
     * Sets logo width field.
     *
     * @param int|null $value
     */
    public function logoWidth(?int $value): self
    {
        $this->instance->setLogoWidth($value);
        return $this;
    }

    /**
     * Sets logo height field.
     *
     * @param int|null $value
     */
    public function logoHeight(?int $value): self
    {
        $this->instance->setLogoHeight($value);
        return $this;
    }

    /**
     * Sets player color field.
     *
     * @param string|null $value
     */
    public function playerColor(?string $value): self
    {
        $this->instance->setPlayerColor($value);
        return $this;
    }

    /**
     * Sets is seo field.
     *
     * @param bool|null $value
     */
    public function isSeo(?bool $value): self
    {
        $this->instance->setIsSeo($value);
        return $this;
    }

    /**
     * Sets dynamic watermark field.
     *
     * @param bool|null $value
     */
    public function dynamicWatermark(?bool $value): self
    {
        $this->instance->setDynamicWatermark($value);
        return $this;
    }

    /**
     * Sets disable seek field.
     *
     * @param bool|null $value
     */
    public function disableSeek(?bool $value): self
    {
        $this->instance->setDisableSeek($value);
        return $this;
    }

    /**
     * Sets disable player controls field.
     *
     * @param bool|null $value
     */
    public function disablePlayerControls(?bool $value): self
    {
        $this->instance->setDisablePlayerControls($value);
        return $this;
    }

    /**
     * Sets allow drm protected videos field.
     *
     * @param bool|null $value
     */
    public function allowDrmProtectedVideos(?bool $value): self
    {
        $this->instance->setAllowDrmProtectedVideos($value);
        return $this;
    }

    /**
     * Sets powered by gumlet overlay field.
     *
     * @param bool|null $value
     */
    public function poweredByGumletOverlay(?bool $value): self
    {
        $this->instance->setPoweredByGumletOverlay($value);
        return $this;
    }

    /**
     * Sets loop field.
     *
     * @param bool|null $value
     */
    public function loop(?bool $value): self
    {
        $this->instance->setLoop($value);
        return $this;
    }

    /**
     * Sets subtitle enabled field.
     *
     * @param bool|null $value
     */
    public function subtitleEnabled(?bool $value): self
    {
        $this->instance->setSubtitleEnabled($value);
        return $this;
    }

    /**
     * Sets watermark bg color field.
     *
     * @param string|null $value
     */
    public function watermarkBgColor(?string $value): self
    {
        $this->instance->setWatermarkBgColor($value);
        return $this;
    }

    /**
     * Sets watermark font color field.
     *
     * @param string|null $value
     */
    public function watermarkFontColor(?string $value): self
    {
        $this->instance->setWatermarkFontColor($value);
        return $this;
    }

    /**
     * Sets watermark font size field.
     *
     * @param int|null $value
     */
    public function watermarkFontSize(?int $value): self
    {
        $this->instance->setWatermarkFontSize($value);
        return $this;
    }

    /**
     * Sets watermark interval field.
     *
     * @param int|null $value
     */
    public function watermarkInterval(?int $value): self
    {
        $this->instance->setWatermarkInterval($value);
        return $this;
    }

    /**
     * Initializes a new Embed Details object.
     */
    public function build(): EmbedDetails
    {
        return CoreHelper::clone($this->instance);
    }
}

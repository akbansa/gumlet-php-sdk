<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models\Builders;

use Core\Utils\CoreHelper;
use GumletRestApisLib\Models\Aws1;
use GumletRestApisLib\Models\Azure;
use GumletRestApisLib\Models\Backblaze;
use GumletRestApisLib\Models\Cloudflare;
use GumletRestApisLib\Models\Cloudinary;
use GumletRestApisLib\Models\Dostorage;
use GumletRestApisLib\Models\Gcs;
use GumletRestApisLib\Models\Linode;
use GumletRestApisLib\Models\Proxy;
use GumletRestApisLib\Models\VideoProtection1;
use GumletRestApisLib\Models\VideoSourcesRequest;
use GumletRestApisLib\Models\Wasabi;
use GumletRestApisLib\Models\Zoom;

/**
 * Builder for model VideoSourcesRequest
 *
 * @see VideoSourcesRequest
 */
class VideoSourcesRequestBuilder
{
    /**
     * @var VideoSourcesRequest
     */
    private $instance;

    private function __construct(VideoSourcesRequest $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Video Sources Request Builder object.
     *
     * @param string $name
     * @param string $type
     */
    public static function init(string $name, string $type): self
    {
        return new self(new VideoSourcesRequest($name, $type));
    }

    /**
     * Sets default profile id field.
     *
     * @param string|null $value
     */
    public function defaultProfileId(?string $value): self
    {
        $this->instance->setDefaultProfileId($value);
        return $this;
    }

    /**
     * Sets insight property id field.
     *
     * @param string|null $value
     */
    public function insightPropertyId(?string $value): self
    {
        $this->instance->setInsightPropertyId($value);
        return $this;
    }

    /**
     * Sets video protection field.
     *
     * @param VideoProtection1|null $value
     */
    public function videoProtection(?VideoProtection1 $value): self
    {
        $this->instance->setVideoProtection($value);
        return $this;
    }

    /**
     * Sets aws field.
     *
     * @param Aws1|null $value
     */
    public function aws(?Aws1 $value): self
    {
        $this->instance->setAws($value);
        return $this;
    }

    /**
     * Sets proxy field.
     *
     * @param Proxy|null $value
     */
    public function proxy(?Proxy $value): self
    {
        $this->instance->setProxy($value);
        return $this;
    }

    /**
     * Sets gcs field.
     *
     * @param Gcs|null $value
     */
    public function gcs(?Gcs $value): self
    {
        $this->instance->setGcs($value);
        return $this;
    }

    /**
     * Sets dostorage field.
     *
     * @param Dostorage|null $value
     */
    public function dostorage(?Dostorage $value): self
    {
        $this->instance->setDostorage($value);
        return $this;
    }

    /**
     * Sets wasabi field.
     *
     * @param Wasabi|null $value
     */
    public function wasabi(?Wasabi $value): self
    {
        $this->instance->setWasabi($value);
        return $this;
    }

    /**
     * Sets cloudinary field.
     *
     * @param Cloudinary|null $value
     */
    public function cloudinary(?Cloudinary $value): self
    {
        $this->instance->setCloudinary($value);
        return $this;
    }

    /**
     * Sets azure field.
     *
     * @param Azure|null $value
     */
    public function azure(?Azure $value): self
    {
        $this->instance->setAzure($value);
        return $this;
    }

    /**
     * Sets linode field.
     *
     * @param Linode|null $value
     */
    public function linode(?Linode $value): self
    {
        $this->instance->setLinode($value);
        return $this;
    }

    /**
     * Sets backblaze field.
     *
     * @param Backblaze|null $value
     */
    public function backblaze(?Backblaze $value): self
    {
        $this->instance->setBackblaze($value);
        return $this;
    }

    /**
     * Sets cloudflare field.
     *
     * @param Cloudflare|null $value
     */
    public function cloudflare(?Cloudflare $value): self
    {
        $this->instance->setCloudflare($value);
        return $this;
    }

    /**
     * Sets zoom field.
     *
     * @param Zoom|null $value
     */
    public function zoom(?Zoom $value): self
    {
        $this->instance->setZoom($value);
        return $this;
    }

    /**
     * Initializes a new Video Sources Request object.
     */
    public function build(): VideoSourcesRequest
    {
        return CoreHelper::clone($this->instance);
    }
}

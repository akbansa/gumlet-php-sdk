<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models\Builders;

use Core\Utils\CoreHelper;
use GumletRestApisLib\Models\GenerateSubtitles2;
use GumletRestApisLib\Models\ImageOverlay2;
use GumletRestApisLib\Models\PreviewThumbnails;
use GumletRestApisLib\Models\Transformations2;

/**
 * Builder for model Transformations2
 *
 * @see Transformations2
 */
class Transformations2Builder
{
    /**
     * @var Transformations2
     */
    private $instance;

    private function __construct(Transformations2 $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Transformations 2 Builder object.
     */
    public static function init(): self
    {
        return new self(new Transformations2());
    }

    /**
     * Sets format field.
     *
     * @param string|null $value
     */
    public function format(?string $value): self
    {
        $this->instance->setFormat($value);
        return $this;
    }

    /**
     * Sets resolution field.
     *
     * @param string[]|null $value
     */
    public function resolution(?array $value): self
    {
        $this->instance->setResolution($value);
        return $this;
    }

    /**
     * Sets audio codec field.
     *
     * @param string[]|null $value
     */
    public function audioCodec(?array $value): self
    {
        $this->instance->setAudioCodec($value);
        return $this;
    }

    /**
     * Sets video codec field.
     *
     * @param string[]|null $value
     */
    public function videoCodec(?array $value): self
    {
        $this->instance->setVideoCodec($value);
        return $this;
    }

    /**
     * Sets image overlay field.
     *
     * @param ImageOverlay2|null $value
     */
    public function imageOverlay(?ImageOverlay2 $value): self
    {
        $this->instance->setImageOverlay($value);
        return $this;
    }

    /**
     * Sets thumbnail field.
     *
     * @param string[]|null $value
     */
    public function thumbnail(?array $value): self
    {
        $this->instance->setThumbnail($value);
        return $this;
    }

    /**
     * Sets thumbnail format field.
     *
     * @param string|null $value
     */
    public function thumbnailFormat(?string $value): self
    {
        $this->instance->setThumbnailFormat($value);
        return $this;
    }

    /**
     * Sets mp 4 access field.
     *
     * @param bool|null $value
     */
    public function mp4Access(?bool $value): self
    {
        $this->instance->setMp4Access($value);
        return $this;
    }

    /**
     * Sets audio only field.
     *
     * @param bool|null $value
     */
    public function audioOnly(?bool $value): self
    {
        $this->instance->setAudioOnly($value);
        return $this;
    }

    /**
     * Sets original deleted field.
     *
     * @param bool|null $value
     */
    public function originalDeleted(?bool $value): self
    {
        $this->instance->setOriginalDeleted($value);
        return $this;
    }

    /**
     * Sets per title encoding field.
     *
     * @param bool|null $value
     */
    public function perTitleEncoding(?bool $value): self
    {
        $this->instance->setPerTitleEncoding($value);
        return $this;
    }

    /**
     * Sets generate subtitles field.
     *
     * @param GenerateSubtitles2|null $value
     */
    public function generateSubtitles(?GenerateSubtitles2 $value): self
    {
        $this->instance->setGenerateSubtitles($value);
        return $this;
    }

    /**
     * Sets preview thumbnails field.
     *
     * @param PreviewThumbnails|null $value
     */
    public function previewThumbnails(?PreviewThumbnails $value): self
    {
        $this->instance->setPreviewThumbnails($value);
        return $this;
    }

    /**
     * Initializes a new Transformations 2 object.
     */
    public function build(): Transformations2
    {
        return CoreHelper::clone($this->instance);
    }
}

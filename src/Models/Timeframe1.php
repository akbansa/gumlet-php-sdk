<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models;

use GumletRestApisLib\ApiHelper;
use GumletRestApisLib\Utils\DateTimeHelper;
use stdClass;

/**
 * The timeframe to get the data for. Currently we only support maximum difference between `start_at`
 * and `end_at` to be *60 days*.
 */
class Timeframe1 implements \JsonSerializable
{
    /**
     * @var \DateTime
     */
    private $startAt;

    /**
     * @var \DateTime
     */
    private $endAt;

    /**
     * @param \DateTime $startAt
     * @param \DateTime $endAt
     */
    public function __construct(\DateTime $startAt, \DateTime $endAt)
    {
        $this->startAt = $startAt;
        $this->endAt = $endAt;
    }

    /**
     * Returns Start At.
     * Use <b>yyyy-MM-ddThh:mm:ss</b> format
     */
    public function getStartAt(): \DateTime
    {
        return $this->startAt;
    }

    /**
     * Sets Start At.
     * Use <b>yyyy-MM-ddThh:mm:ss</b> format
     *
     * @required
     * @maps start_at
     * @factory \GumletRestApisLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setStartAt(\DateTime $startAt): void
    {
        $this->startAt = $startAt;
    }

    /**
     * Returns End At.
     * Use <b>yyyy-MM-ddThh:mm:ss</b> format
     */
    public function getEndAt(): \DateTime
    {
        return $this->endAt;
    }

    /**
     * Sets End At.
     * Use <b>yyyy-MM-ddThh:mm:ss</b> format
     *
     * @required
     * @maps end_at
     * @factory \GumletRestApisLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setEndAt(\DateTime $endAt): void
    {
        $this->endAt = $endAt;
    }

    /**
     * Converts the Timeframe1 object to a human-readable string representation.
     *
     * @return string The string representation of the Timeframe1 object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify('Timeframe1', ['startAt' => $this->startAt, 'endAt' => $this->endAt]);
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['start_at'] = DateTimeHelper::toRfc3339DateTime($this->startAt);
        $json['end_at']   = DateTimeHelper::toRfc3339DateTime($this->endAt);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

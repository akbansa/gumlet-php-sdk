<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models;

use GumletRestApisLib\ApiHelper;
use stdClass;

class VideoAssetsListResponse implements \JsonSerializable
{
    /**
     * @var AllAsset[]|null
     */
    private $allAssets;

    /**
     * @var int|null
     */
    private $totalAssetCount = 0;

    /**
     * @var int|null
     */
    private $currentOffset = 0;

    /**
     * @var string[]|null
     */
    private $distinctTags;

    /**
     * Returns All Assets.
     *
     * @return AllAsset[]|null
     */
    public function getAllAssets(): ?array
    {
        return $this->allAssets;
    }

    /**
     * Sets All Assets.
     *
     * @maps all_assets
     *
     * @param AllAsset[]|null $allAssets
     */
    public function setAllAssets(?array $allAssets): void
    {
        $this->allAssets = $allAssets;
    }

    /**
     * Returns Total Asset Count.
     */
    public function getTotalAssetCount(): ?int
    {
        return $this->totalAssetCount;
    }

    /**
     * Sets Total Asset Count.
     *
     * @maps total_asset_count
     */
    public function setTotalAssetCount(?int $totalAssetCount): void
    {
        $this->totalAssetCount = $totalAssetCount;
    }

    /**
     * Returns Current Offset.
     */
    public function getCurrentOffset(): ?int
    {
        return $this->currentOffset;
    }

    /**
     * Sets Current Offset.
     *
     * @maps current_offset
     */
    public function setCurrentOffset(?int $currentOffset): void
    {
        $this->currentOffset = $currentOffset;
    }

    /**
     * Returns Distinct Tags.
     *
     * @return string[]|null
     */
    public function getDistinctTags(): ?array
    {
        return $this->distinctTags;
    }

    /**
     * Sets Distinct Tags.
     *
     * @maps distinct_tags
     *
     * @param string[]|null $distinctTags
     */
    public function setDistinctTags(?array $distinctTags): void
    {
        $this->distinctTags = $distinctTags;
    }

    /**
     * Converts the VideoAssetsListResponse object to a human-readable string representation.
     *
     * @return string The string representation of the VideoAssetsListResponse object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'VideoAssetsListResponse',
            [
                'allAssets' => $this->allAssets,
                'totalAssetCount' => $this->totalAssetCount,
                'currentOffset' => $this->currentOffset,
                'distinctTags' => $this->distinctTags
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->allAssets)) {
            $json['all_assets']        = $this->allAssets;
        }
        if (isset($this->totalAssetCount)) {
            $json['total_asset_count'] = $this->totalAssetCount;
        }
        if (isset($this->currentOffset)) {
            $json['current_offset']    = $this->currentOffset;
        }
        if (isset($this->distinctTags)) {
            $json['distinct_tags']     = $this->distinctTags;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models;

use GumletRestApisLib\ApiHelper;
use stdClass;

class Input3 implements \JsonSerializable
{
    /**
     * @var Transformations3|null
     */
    private $transformations;

    /**
     * @var string|null
     */
    private $sourceUrl;

    /**
     * @var int|null
     */
    private $size = 0;

    /**
     * @var float|null
     */
    private $duration = 0;

    /**
     * @var string|null
     */
    private $aspectRatio;

    /**
     * @var int|null
     */
    private $fps = 0;

    /**
     * @var int|null
     */
    private $width = 0;

    /**
     * @var int|null
     */
    private $height = 0;

    /**
     * @var AdditionalTrack1[]|null
     */
    private $additionalTracks;

    /**
     * Returns Transformations.
     */
    public function getTransformations(): ?Transformations3
    {
        return $this->transformations;
    }

    /**
     * Sets Transformations.
     *
     * @maps transformations
     */
    public function setTransformations(?Transformations3 $transformations): void
    {
        $this->transformations = $transformations;
    }

    /**
     * Returns Source Url.
     */
    public function getSourceUrl(): ?string
    {
        return $this->sourceUrl;
    }

    /**
     * Sets Source Url.
     *
     * @maps source_url
     */
    public function setSourceUrl(?string $sourceUrl): void
    {
        $this->sourceUrl = $sourceUrl;
    }

    /**
     * Returns Size.
     */
    public function getSize(): ?int
    {
        return $this->size;
    }

    /**
     * Sets Size.
     *
     * @maps size
     */
    public function setSize(?int $size): void
    {
        $this->size = $size;
    }

    /**
     * Returns Duration.
     */
    public function getDuration(): ?float
    {
        return $this->duration;
    }

    /**
     * Sets Duration.
     *
     * @maps duration
     */
    public function setDuration(?float $duration): void
    {
        $this->duration = $duration;
    }

    /**
     * Returns Aspect Ratio.
     */
    public function getAspectRatio(): ?string
    {
        return $this->aspectRatio;
    }

    /**
     * Sets Aspect Ratio.
     *
     * @maps aspect_ratio
     */
    public function setAspectRatio(?string $aspectRatio): void
    {
        $this->aspectRatio = $aspectRatio;
    }

    /**
     * Returns Fps.
     */
    public function getFps(): ?int
    {
        return $this->fps;
    }

    /**
     * Sets Fps.
     *
     * @maps fps
     */
    public function setFps(?int $fps): void
    {
        $this->fps = $fps;
    }

    /**
     * Returns Width.
     */
    public function getWidth(): ?int
    {
        return $this->width;
    }

    /**
     * Sets Width.
     *
     * @maps width
     */
    public function setWidth(?int $width): void
    {
        $this->width = $width;
    }

    /**
     * Returns Height.
     */
    public function getHeight(): ?int
    {
        return $this->height;
    }

    /**
     * Sets Height.
     *
     * @maps height
     */
    public function setHeight(?int $height): void
    {
        $this->height = $height;
    }

    /**
     * Returns Additional Tracks.
     *
     * @return AdditionalTrack1[]|null
     */
    public function getAdditionalTracks(): ?array
    {
        return $this->additionalTracks;
    }

    /**
     * Sets Additional Tracks.
     *
     * @maps additional_tracks
     *
     * @param AdditionalTrack1[]|null $additionalTracks
     */
    public function setAdditionalTracks(?array $additionalTracks): void
    {
        $this->additionalTracks = $additionalTracks;
    }

    /**
     * Converts the Input3 object to a human-readable string representation.
     *
     * @return string The string representation of the Input3 object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'Input3',
            [
                'transformations' => $this->transformations,
                'sourceUrl' => $this->sourceUrl,
                'size' => $this->size,
                'duration' => $this->duration,
                'aspectRatio' => $this->aspectRatio,
                'fps' => $this->fps,
                'width' => $this->width,
                'height' => $this->height,
                'additionalTracks' => $this->additionalTracks
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->transformations)) {
            $json['transformations']   = $this->transformations;
        }
        if (isset($this->sourceUrl)) {
            $json['source_url']        = $this->sourceUrl;
        }
        if (isset($this->size)) {
            $json['size']              = $this->size;
        }
        if (isset($this->duration)) {
            $json['duration']          = $this->duration;
        }
        if (isset($this->aspectRatio)) {
            $json['aspect_ratio']      = $this->aspectRatio;
        }
        if (isset($this->fps)) {
            $json['fps']               = $this->fps;
        }
        if (isset($this->width)) {
            $json['width']             = $this->width;
        }
        if (isset($this->height)) {
            $json['height']            = $this->height;
        }
        if (isset($this->additionalTracks)) {
            $json['additional_tracks'] = $this->additionalTracks;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

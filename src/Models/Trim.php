<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models;

use GumletRestApisLib\ApiHelper;
use stdClass;

/**
 * Trim transformation can be used to trim videos based on time duration.
 */
class Trim implements \JsonSerializable
{
    /**
     * @var float
     */
    private $startOffset;

    /**
     * @var float
     */
    private $endOffset;

    /**
     * @var float|null
     */
    private $duration;

    /**
     * @param float $startOffset
     * @param float $endOffset
     */
    public function __construct(float $startOffset, float $endOffset)
    {
        $this->startOffset = $startOffset;
        $this->endOffset = $endOffset;
    }

    /**
     * Returns Start Offset.
     * Start offset in number of seconds or in `HH:MM:SS` format.
     */
    public function getStartOffset(): float
    {
        return $this->startOffset;
    }

    /**
     * Sets Start Offset.
     * Start offset in number of seconds or in `HH:MM:SS` format.
     *
     * @required
     * @maps start_offset
     */
    public function setStartOffset(float $startOffset): void
    {
        $this->startOffset = $startOffset;
    }

    /**
     * Returns End Offset.
     * End offset in number of seconds or in `HH:MM:SS` format.
     */
    public function getEndOffset(): float
    {
        return $this->endOffset;
    }

    /**
     * Sets End Offset.
     * End offset in number of seconds or in `HH:MM:SS` format.
     *
     * @required
     * @maps end_offset
     */
    public function setEndOffset(float $endOffset): void
    {
        $this->endOffset = $endOffset;
    }

    /**
     * Returns Duration.
     * Duration can be used in conjunction with `start_offset` parameter, can be specified in number of
     * seconds.
     */
    public function getDuration(): ?float
    {
        return $this->duration;
    }

    /**
     * Sets Duration.
     * Duration can be used in conjunction with `start_offset` parameter, can be specified in number of
     * seconds.
     *
     * @maps duration
     */
    public function setDuration(?float $duration): void
    {
        $this->duration = $duration;
    }

    /**
     * Converts the Trim object to a human-readable string representation.
     *
     * @return string The string representation of the Trim object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'Trim',
            ['startOffset' => $this->startOffset, 'endOffset' => $this->endOffset, 'duration' => $this->duration]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['start_offset'] = $this->startOffset;
        $json['end_offset']   = $this->endOffset;
        if (isset($this->duration)) {
            $json['duration'] = $this->duration;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

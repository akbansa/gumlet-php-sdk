<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models;

use GumletRestApisLib\ApiHelper;
use GumletRestApisLib\Utils\DateTimeHelper;
use stdClass;

/**
 * The timeframe to get the data for. Currently we only support a maximum of 30 days between `start_at`
 * and `end_at`.
 */
class DateRange1 implements \JsonSerializable
{
    /**
     * @var \DateTime|null
     */
    private $startAt;

    /**
     * @var \DateTime|null
     */
    private $endAt;

    /**
     * Returns Start At.
     * The starting date to consider
     */
    public function getStartAt(): ?\DateTime
    {
        return $this->startAt;
    }

    /**
     * Sets Start At.
     * The starting date to consider
     *
     * @maps start_at
     * @factory \GumletRestApisLib\Utils\DateTimeHelper::fromSimpleDate
     */
    public function setStartAt(?\DateTime $startAt): void
    {
        $this->startAt = $startAt;
    }

    /**
     * Returns End At.
     * The ending date to consider
     */
    public function getEndAt(): ?\DateTime
    {
        return $this->endAt;
    }

    /**
     * Sets End At.
     * The ending date to consider
     *
     * @maps end_at
     * @factory \GumletRestApisLib\Utils\DateTimeHelper::fromSimpleDate
     */
    public function setEndAt(?\DateTime $endAt): void
    {
        $this->endAt = $endAt;
    }

    /**
     * Converts the DateRange1 object to a human-readable string representation.
     *
     * @return string The string representation of the DateRange1 object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify('DateRange1', ['startAt' => $this->startAt, 'endAt' => $this->endAt]);
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->startAt)) {
            $json['start_at'] = DateTimeHelper::toSimpleDate($this->startAt);
        }
        if (isset($this->endAt)) {
            $json['end_at']   = DateTimeHelper::toSimpleDate($this->endAt);
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

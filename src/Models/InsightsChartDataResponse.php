<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models;

use GumletRestApisLib\ApiHelper;
use stdClass;

class InsightsChartDataResponse implements \JsonSerializable
{
    /**
     * @var View[]|null
     */
    private $views;

    /**
     * @var UniqueView[]|null
     */
    private $uniqueViews;

    /**
     * Returns Views.
     *
     * @return View[]|null
     */
    public function getViews(): ?array
    {
        return $this->views;
    }

    /**
     * Sets Views.
     *
     * @maps views
     *
     * @param View[]|null $views
     */
    public function setViews(?array $views): void
    {
        $this->views = $views;
    }

    /**
     * Returns Unique Views.
     *
     * @return UniqueView[]|null
     */
    public function getUniqueViews(): ?array
    {
        return $this->uniqueViews;
    }

    /**
     * Sets Unique Views.
     *
     * @maps unique_views
     *
     * @param UniqueView[]|null $uniqueViews
     */
    public function setUniqueViews(?array $uniqueViews): void
    {
        $this->uniqueViews = $uniqueViews;
    }

    /**
     * Converts the InsightsChartDataResponse object to a human-readable string representation.
     *
     * @return string The string representation of the InsightsChartDataResponse object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'InsightsChartDataResponse',
            ['views' => $this->views, 'uniqueViews' => $this->uniqueViews]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->views)) {
            $json['views']        = $this->views;
        }
        if (isset($this->uniqueViews)) {
            $json['unique_views'] = $this->uniqueViews;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

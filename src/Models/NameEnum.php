<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models;

use Core\Utils\CoreHelper;
use Exception;
use stdClass;

/**
 * Name of the breakdown to filter data on.
 */
class NameEnum
{
    public const META_BROWSER = 'meta_browser';

    public const META_OPERATING_SYSTEM = 'meta_operating_system';

    public const META_OPERATING_SYSTEM_VERSION = 'meta_operating_system_version';

    public const META_DEVICE_CATEGORY = 'meta_device_category';

    public const META_DEVICE_MANUFACTURER = 'meta_device_manufacturer';

    public const META_DEVICE_IS_TOUCHSCREEN = 'meta_device_is_touchscreen';

    public const META_CONNECTION_TYPE = 'meta_connection_type';

    public const META_CONNECTION_SPEED = 'meta_connection_speed';

    public const META_DEVICE_NAME = 'meta_device_name';

    public const META_DEVICE_DISPLAY_WIDTH = 'meta_device_display_width';

    public const META_DEVICE_DISPLAY_HEIGHT = 'meta_device_display_height';

    public const META_COUNTRY = 'meta_country';

    public const META_CONTINENT_CODE = 'meta_continent_code';

    public const META_CITY = 'meta_city';

    public const META_REGION = 'meta_region';

    public const PLAYER_SOFTWARE = 'player_software';

    public const PLAYER_SOFTWARE_VERSION = 'player_software_version';

    public const PLAYER_HEIGHT_PIXELS = 'player_height_pixels';

    public const PLAYER_WIDTH_PIXELS = 'player_width_pixels';

    public const PLAYER_LANGUAGE_CODE = 'player_language_code';

    public const PLAYER_NAME = 'player_name';

    public const PLAYER_INTEGRATION_VERSION = 'player_integration_version';

    public const META_PAGE_URL = 'meta_page_url';

    public const META_ASN = 'meta_asn';

    public const CUSTOM_USER_ID = 'custom_user_id';

    public const USER_NAME = 'user_name';

    public const USER_EMAIL = 'user_email';

    public const USER_PHONE = 'user_phone';

    public const USER_CITY = 'user_city';

    public const USER_STATE = 'user_state';

    public const USER_COUNTRY = 'user_country';

    public const USER_ZIPCODE = 'user_zipcode';

    public const CUSTOM_VIDEO_ID = 'custom_video_id';

    public const CUSTOM_VIDEO_TITLE = 'custom_video_title';

    public const VIDEO_SOURCE_URL = 'video_source_url';

    public const VIDEO_SOURCE_HOSTNAME = 'video_source_hostname';

    public const VIDEO_SOURCE_FORMAT = 'video_source_format';

    public const CUSTOM_ENCODING_VARIANT = 'custom_encoding_variant';

    public const CUSTOM_VIDEO_VARIANT_NAME = 'custom_video_variant_name';

    public const CUSTOM_VIDEO_PRODUCER = 'custom_video_producer';

    public const CUSTOM_VIDEO_SERIES = 'custom_video_series';

    public const CUSTOM_VIDEO_LANGUAGE = 'custom_video_language';

    public const CUSTOM_VIDEO_VARIANT = 'custom_video_variant';

    public const CUSTOM_CONTENT_TYPE = 'custom_content_type';

    public const CUSTOM_DATA_1 = 'custom_data_1';

    public const CUSTOM_DATA_2 = 'custom_data_2';

    public const CUSTOM_DATA_3 = 'custom_data_3';

    public const CUSTOM_DATA_4 = 'custom_data_4';

    public const CUSTOM_DATA_5 = 'custom_data_5';

    public const CUSTOM_DATA_6 = 'custom_data_6';

    public const CUSTOM_DATA_7 = 'custom_data_7';

    public const CUSTOM_DATA_8 = 'custom_data_8';

    public const CUSTOM_DATA_9 = 'custom_data_9';

    public const CUSTOM_DATA_10 = 'custom_data_10';

    private const _ALL_VALUES = [
        self::META_BROWSER,
        self::META_OPERATING_SYSTEM,
        self::META_OPERATING_SYSTEM_VERSION,
        self::META_DEVICE_CATEGORY,
        self::META_DEVICE_MANUFACTURER,
        self::META_DEVICE_IS_TOUCHSCREEN,
        self::META_CONNECTION_TYPE,
        self::META_CONNECTION_SPEED,
        self::META_DEVICE_NAME,
        self::META_DEVICE_DISPLAY_WIDTH,
        self::META_DEVICE_DISPLAY_HEIGHT,
        self::META_COUNTRY,
        self::META_CONTINENT_CODE,
        self::META_CITY,
        self::META_REGION,
        self::PLAYER_SOFTWARE,
        self::PLAYER_SOFTWARE_VERSION,
        self::PLAYER_HEIGHT_PIXELS,
        self::PLAYER_WIDTH_PIXELS,
        self::PLAYER_LANGUAGE_CODE,
        self::PLAYER_NAME,
        self::PLAYER_INTEGRATION_VERSION,
        self::META_PAGE_URL,
        self::META_ASN,
        self::CUSTOM_USER_ID,
        self::USER_NAME,
        self::USER_EMAIL,
        self::USER_PHONE,
        self::USER_CITY,
        self::USER_STATE,
        self::USER_COUNTRY,
        self::USER_ZIPCODE,
        self::CUSTOM_VIDEO_ID,
        self::CUSTOM_VIDEO_TITLE,
        self::VIDEO_SOURCE_URL,
        self::VIDEO_SOURCE_HOSTNAME,
        self::VIDEO_SOURCE_FORMAT,
        self::CUSTOM_ENCODING_VARIANT,
        self::CUSTOM_VIDEO_VARIANT_NAME,
        self::CUSTOM_VIDEO_PRODUCER,
        self::CUSTOM_VIDEO_SERIES,
        self::CUSTOM_VIDEO_LANGUAGE,
        self::CUSTOM_VIDEO_VARIANT,
        self::CUSTOM_CONTENT_TYPE,
        self::CUSTOM_DATA_1,
        self::CUSTOM_DATA_2,
        self::CUSTOM_DATA_3,
        self::CUSTOM_DATA_4,
        self::CUSTOM_DATA_5,
        self::CUSTOM_DATA_6,
        self::CUSTOM_DATA_7,
        self::CUSTOM_DATA_8,
        self::CUSTOM_DATA_9,
        self::CUSTOM_DATA_10
    ];

    /**
     * Ensures that all the given values are present in this Enum.
     *
     * @param array|stdClass|null|string $value Value or a list/map of values to be checked
     *
     * @return array|null|string Input value(s), if all are a part of this Enum
     *
     * @throws Exception Throws exception if any given value is not in this Enum
     */
    public static function checkValue($value)
    {
        $value = json_decode(json_encode($value), true); // converts stdClass into array
        if (CoreHelper::checkValueOrValuesInList($value, self::_ALL_VALUES)) {
            return $value;
        }
        throw new Exception("$value is invalid for NameEnum.");
    }
}

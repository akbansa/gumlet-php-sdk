<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models;

use GumletRestApisLib\ApiHelper;
use stdClass;

class VideoLiveAssetsUpdateResponse implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $status;

    /**
     * @var string|null
     */
    private $streamKey;

    /**
     * @var string|null
     */
    private $liveAssetId;

    /**
     * @var string|null
     */
    private $liveVideoSourceId;

    /**
     * @var Input4|null
     */
    private $input;

    /**
     * @var string|null
     */
    private $streamUrl;

    /**
     * @var Output4|null
     */
    private $output;

    /**
     * @var int|null
     */
    private $createdAt = 0;

    /**
     * @var int|null
     */
    private $updatedAt = 0;

    /**
     * Returns Status.
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     *
     * @maps status
     */
    public function setStatus(?string $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Stream Key.
     */
    public function getStreamKey(): ?string
    {
        return $this->streamKey;
    }

    /**
     * Sets Stream Key.
     *
     * @maps stream_key
     */
    public function setStreamKey(?string $streamKey): void
    {
        $this->streamKey = $streamKey;
    }

    /**
     * Returns Live Asset Id.
     */
    public function getLiveAssetId(): ?string
    {
        return $this->liveAssetId;
    }

    /**
     * Sets Live Asset Id.
     *
     * @maps live_asset_id
     */
    public function setLiveAssetId(?string $liveAssetId): void
    {
        $this->liveAssetId = $liveAssetId;
    }

    /**
     * Returns Live Video Source Id.
     */
    public function getLiveVideoSourceId(): ?string
    {
        return $this->liveVideoSourceId;
    }

    /**
     * Sets Live Video Source Id.
     *
     * @maps live_video_source_id
     */
    public function setLiveVideoSourceId(?string $liveVideoSourceId): void
    {
        $this->liveVideoSourceId = $liveVideoSourceId;
    }

    /**
     * Returns Input.
     */
    public function getInput(): ?Input4
    {
        return $this->input;
    }

    /**
     * Sets Input.
     *
     * @maps input
     */
    public function setInput(?Input4 $input): void
    {
        $this->input = $input;
    }

    /**
     * Returns Stream Url.
     */
    public function getStreamUrl(): ?string
    {
        return $this->streamUrl;
    }

    /**
     * Sets Stream Url.
     *
     * @maps stream_url
     */
    public function setStreamUrl(?string $streamUrl): void
    {
        $this->streamUrl = $streamUrl;
    }

    /**
     * Returns Output.
     */
    public function getOutput(): ?Output4
    {
        return $this->output;
    }

    /**
     * Sets Output.
     *
     * @maps output
     */
    public function setOutput(?Output4 $output): void
    {
        $this->output = $output;
    }

    /**
     * Returns Created At.
     */
    public function getCreatedAt(): ?int
    {
        return $this->createdAt;
    }

    /**
     * Sets Created At.
     *
     * @maps created_at
     */
    public function setCreatedAt(?int $createdAt): void
    {
        $this->createdAt = $createdAt;
    }

    /**
     * Returns Updated At.
     */
    public function getUpdatedAt(): ?int
    {
        return $this->updatedAt;
    }

    /**
     * Sets Updated At.
     *
     * @maps updated_at
     */
    public function setUpdatedAt(?int $updatedAt): void
    {
        $this->updatedAt = $updatedAt;
    }

    /**
     * Converts the VideoLiveAssetsUpdateResponse object to a human-readable string representation.
     *
     * @return string The string representation of the VideoLiveAssetsUpdateResponse object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'VideoLiveAssetsUpdateResponse',
            [
                'status' => $this->status,
                'streamKey' => $this->streamKey,
                'liveAssetId' => $this->liveAssetId,
                'liveVideoSourceId' => $this->liveVideoSourceId,
                'input' => $this->input,
                'streamUrl' => $this->streamUrl,
                'output' => $this->output,
                'createdAt' => $this->createdAt,
                'updatedAt' => $this->updatedAt
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->status)) {
            $json['status']               = $this->status;
        }
        if (isset($this->streamKey)) {
            $json['stream_key']           = $this->streamKey;
        }
        if (isset($this->liveAssetId)) {
            $json['live_asset_id']        = $this->liveAssetId;
        }
        if (isset($this->liveVideoSourceId)) {
            $json['live_video_source_id'] = $this->liveVideoSourceId;
        }
        if (isset($this->input)) {
            $json['input']                = $this->input;
        }
        if (isset($this->streamUrl)) {
            $json['stream_url']           = $this->streamUrl;
        }
        if (isset($this->output)) {
            $json['output']               = $this->output;
        }
        if (isset($this->createdAt)) {
            $json['created_at']           = $this->createdAt;
        }
        if (isset($this->updatedAt)) {
            $json['updated_at']           = $this->updatedAt;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

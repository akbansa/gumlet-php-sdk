<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models;

use GumletRestApisLib\ApiHelper;
use stdClass;

/**
 * This is a required field if source type is azure.
 */
class Azure2 implements \JsonSerializable
{
    /**
     * @var string
     */
    private $azureAccountName;

    /**
     * @var string
     */
    private $azureContainerName;

    /**
     * @var string
     */
    private $azureSharedToken;

    /**
     * @var string
     */
    private $azurePath;

    /**
     * @param string $azureAccountName
     * @param string $azureContainerName
     * @param string $azureSharedToken
     * @param string $azurePath
     */
    public function __construct(
        string $azureAccountName,
        string $azureContainerName,
        string $azureSharedToken,
        string $azurePath
    ) {
        $this->azureAccountName = $azureAccountName;
        $this->azureContainerName = $azureContainerName;
        $this->azureSharedToken = $azureSharedToken;
        $this->azurePath = $azurePath;
    }

    /**
     * Returns Azure Account Name.
     */
    public function getAzureAccountName(): string
    {
        return $this->azureAccountName;
    }

    /**
     * Sets Azure Account Name.
     *
     * @required
     * @maps azure_account_name
     */
    public function setAzureAccountName(string $azureAccountName): void
    {
        $this->azureAccountName = $azureAccountName;
    }

    /**
     * Returns Azure Container Name.
     */
    public function getAzureContainerName(): string
    {
        return $this->azureContainerName;
    }

    /**
     * Sets Azure Container Name.
     *
     * @required
     * @maps azure_container_name
     */
    public function setAzureContainerName(string $azureContainerName): void
    {
        $this->azureContainerName = $azureContainerName;
    }

    /**
     * Returns Azure Shared Token.
     */
    public function getAzureSharedToken(): string
    {
        return $this->azureSharedToken;
    }

    /**
     * Sets Azure Shared Token.
     *
     * @required
     * @maps azure_shared_token
     */
    public function setAzureSharedToken(string $azureSharedToken): void
    {
        $this->azureSharedToken = $azureSharedToken;
    }

    /**
     * Returns Azure Path.
     */
    public function getAzurePath(): string
    {
        return $this->azurePath;
    }

    /**
     * Sets Azure Path.
     *
     * @required
     * @maps azure_path
     */
    public function setAzurePath(string $azurePath): void
    {
        $this->azurePath = $azurePath;
    }

    /**
     * Converts the Azure2 object to a human-readable string representation.
     *
     * @return string The string representation of the Azure2 object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'Azure2',
            [
                'azureAccountName' => $this->azureAccountName,
                'azureContainerName' => $this->azureContainerName,
                'azureSharedToken' => $this->azureSharedToken,
                'azurePath' => $this->azurePath
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['azure_account_name']   = $this->azureAccountName;
        $json['azure_container_name'] = $this->azureContainerName;
        $json['azure_shared_token']   = $this->azureSharedToken;
        $json['azure_path']           = $this->azurePath;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models;

use Core\Utils\CoreHelper;
use Exception;
use stdClass;

/**
 * Video collections are top-level entities in Gumlet. You can use them to organize videos for
 * different teams/departments or use cases.
 */
class TypeEnum
{
    public const PROXY = 'proxy';

    public const DIRECTUPLOAD = 'direct-upload';

    public const WEBFOLDER = 'webfolder';

    public const AWS = 'aws';

    public const GCS = 'gcs';

    public const DOSTORAGE = 'dostorage';

    public const WASABI = 'wasabi';

    public const CLOUDINARY = 'cloudinary';

    public const AZURE = 'azure';

    public const LINODE = 'linode';

    public const BACKBLAZE = 'backblaze';

    public const CLOUDFLARE = 'cloudflare';

    public const ZOOM = 'zoom';

    private const _ALL_VALUES = [
        self::PROXY,
        self::DIRECTUPLOAD,
        self::WEBFOLDER,
        self::AWS,
        self::GCS,
        self::DOSTORAGE,
        self::WASABI,
        self::CLOUDINARY,
        self::AZURE,
        self::LINODE,
        self::BACKBLAZE,
        self::CLOUDFLARE,
        self::ZOOM
    ];

    /**
     * Ensures that all the given values are present in this Enum.
     *
     * @param array|stdClass|null|string $value Value or a list/map of values to be checked
     *
     * @return array|null|string Input value(s), if all are a part of this Enum
     *
     * @throws Exception Throws exception if any given value is not in this Enum
     */
    public static function checkValue($value)
    {
        $value = json_decode(json_encode($value), true); // converts stdClass into array
        if (CoreHelper::checkValueOrValuesInList($value, self::_ALL_VALUES)) {
            return $value;
        }
        throw new Exception("$value is invalid for TypeEnum.");
    }
}

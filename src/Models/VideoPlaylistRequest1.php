<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models;

use GumletRestApisLib\ApiHelper;
use stdClass;

class VideoPlaylistRequest1 implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $title;

    /**
     * @var string|null
     */
    private $description;

    /**
     * @var int|null
     */
    private $position;

    /**
     * @var PlayerConfig2|null
     */
    private $playerConfig;

    /**
     * @var bool|null
     */
    private $channelVisibility = false;

    /**
     * Returns Title.
     */
    public function getTitle(): ?string
    {
        return $this->title;
    }

    /**
     * Sets Title.
     *
     * @maps title
     */
    public function setTitle(?string $title): void
    {
        $this->title = $title;
    }

    /**
     * Returns Description.
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     *
     * @maps description
     */
    public function setDescription(?string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Position.
     * Playlists have order in which they will be shown on the channel page.
     */
    public function getPosition(): ?int
    {
        return $this->position;
    }

    /**
     * Sets Position.
     * Playlists have order in which they will be shown on the channel page.
     *
     * @maps position
     */
    public function setPosition(?int $position): void
    {
        $this->position = $position;
    }

    /**
     * Returns Player Config.
     * Configure player settings for this playlist, it overrides the setting set on collection.
     */
    public function getPlayerConfig(): ?PlayerConfig2
    {
        return $this->playerConfig;
    }

    /**
     * Sets Player Config.
     * Configure player settings for this playlist, it overrides the setting set on collection.
     *
     * @maps player_config
     */
    public function setPlayerConfig(?PlayerConfig2 $playerConfig): void
    {
        $this->playerConfig = $playerConfig;
    }

    /**
     * Returns Channel Visibility.
     * If true then playlist will be visible on channel page.
     */
    public function getChannelVisibility(): ?bool
    {
        return $this->channelVisibility;
    }

    /**
     * Sets Channel Visibility.
     * If true then playlist will be visible on channel page.
     *
     * @maps channel_visibility
     */
    public function setChannelVisibility(?bool $channelVisibility): void
    {
        $this->channelVisibility = $channelVisibility;
    }

    /**
     * Converts the VideoPlaylistRequest1 object to a human-readable string representation.
     *
     * @return string The string representation of the VideoPlaylistRequest1 object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'VideoPlaylistRequest1',
            [
                'title' => $this->title,
                'description' => $this->description,
                'position' => $this->position,
                'playerConfig' => $this->playerConfig,
                'channelVisibility' => $this->channelVisibility
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->title)) {
            $json['title']              = $this->title;
        }
        if (isset($this->description)) {
            $json['description']        = $this->description;
        }
        if (isset($this->position)) {
            $json['position']           = $this->position;
        }
        if (isset($this->playerConfig)) {
            $json['player_config']      = $this->playerConfig;
        }
        if (isset($this->channelVisibility)) {
            $json['channel_visibility'] = $this->channelVisibility;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

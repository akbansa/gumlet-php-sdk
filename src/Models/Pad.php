<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models;

use GumletRestApisLib\ApiHelper;
use stdClass;

/**
 * This transformation can be used to add padding to the video.
 */
class Pad implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $top;

    /**
     * @var string|null
     */
    private $left;

    /**
     * @var string|null
     */
    private $bottom;

    /**
     * @var string|null
     */
    private $right;

    /**
     * @var string|null
     */
    private $color;

    /**
     * Returns Top.
     * Width of padding on the top side. Values can be an absolute number of pixels or a percentage value
     * relative to the video height. **Default: `%5`**
     */
    public function getTop(): ?string
    {
        return $this->top;
    }

    /**
     * Sets Top.
     * Width of padding on the top side. Values can be an absolute number of pixels or a percentage value
     * relative to the video height. **Default: `%5`**
     *
     * @maps top
     */
    public function setTop(?string $top): void
    {
        $this->top = $top;
    }

    /**
     * Returns Left.
     * Width of padding on the left side. Values can be an absolute number of pixels or a percentage value
     * relative to the video width. **Default: `0`**
     */
    public function getLeft(): ?string
    {
        return $this->left;
    }

    /**
     * Sets Left.
     * Width of padding on the left side. Values can be an absolute number of pixels or a percentage value
     * relative to the video width. **Default: `0`**
     *
     * @maps left
     */
    public function setLeft(?string $left): void
    {
        $this->left = $left;
    }

    /**
     * Returns Bottom.
     * Width of padding on the bottom side. Values can be an absolute number of pixels or a percentage
     * value relative to the video height. **Default: `%5`**
     */
    public function getBottom(): ?string
    {
        return $this->bottom;
    }

    /**
     * Sets Bottom.
     * Width of padding on the bottom side. Values can be an absolute number of pixels or a percentage
     * value relative to the video height. **Default: `%5`**
     *
     * @maps bottom
     */
    public function setBottom(?string $bottom): void
    {
        $this->bottom = $bottom;
    }

    /**
     * Returns Right.
     * Width of padding on the right side. Values can be an absolute number of pixels or a percentage value
     * relative to the video width. **Default: `0`**
     */
    public function getRight(): ?string
    {
        return $this->right;
    }

    /**
     * Sets Right.
     * Width of padding on the right side. Values can be an absolute number of pixels or a percentage value
     * relative to the video width. **Default: `0`**
     *
     * @maps right
     */
    public function setRight(?string $right): void
    {
        $this->right = $right;
    }

    /**
     * Returns Color.
     * Color of padding area. **Default: `black`**
     */
    public function getColor(): ?string
    {
        return $this->color;
    }

    /**
     * Sets Color.
     * Color of padding area. **Default: `black`**
     *
     * @maps color
     */
    public function setColor(?string $color): void
    {
        $this->color = $color;
    }

    /**
     * Converts the Pad object to a human-readable string representation.
     *
     * @return string The string representation of the Pad object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'Pad',
            [
                'top' => $this->top,
                'left' => $this->left,
                'bottom' => $this->bottom,
                'right' => $this->right,
                'color' => $this->color
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->top)) {
            $json['top']    = $this->top;
        }
        if (isset($this->left)) {
            $json['left']   = $this->left;
        }
        if (isset($this->bottom)) {
            $json['bottom'] = $this->bottom;
        }
        if (isset($this->right)) {
            $json['right']  = $this->right;
        }
        if (isset($this->color)) {
            $json['color']  = $this->color;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

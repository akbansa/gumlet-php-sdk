<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models;

use GumletRestApisLib\ApiHelper;
use stdClass;

/**
 * Configurations to set various channel settings.
 */
class ChannelSettings2 implements \JsonSerializable
{
    /**
     * @var bool|null
     */
    private $active = false;

    /**
     * @var string|null
     */
    private $description;

    /**
     * @var string|null
     */
    private $title;

    /**
     * @var string|null
     */
    private $privacyType;

    /**
     * @var string|null
     */
    private $featuredVideo;

    /**
     * @var string|null
     */
    private $password;

    /**
     * Returns Active.
     */
    public function getActive(): ?bool
    {
        return $this->active;
    }

    /**
     * Sets Active.
     *
     * @maps active
     */
    public function setActive(?bool $active): void
    {
        $this->active = $active;
    }

    /**
     * Returns Description.
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     *
     * @maps description
     */
    public function setDescription(?string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Title.
     */
    public function getTitle(): ?string
    {
        return $this->title;
    }

    /**
     * Sets Title.
     *
     * @maps title
     */
    public function setTitle(?string $title): void
    {
        $this->title = $title;
    }

    /**
     * Returns Privacy Type.
     */
    public function getPrivacyType(): ?string
    {
        return $this->privacyType;
    }

    /**
     * Sets Privacy Type.
     *
     * @maps privacy_type
     * @factory \GumletRestApisLib\Models\PrivacyTypeEnum::checkValue
     */
    public function setPrivacyType(?string $privacyType): void
    {
        $this->privacyType = $privacyType;
    }

    /**
     * Returns Featured Video.
     * Video asset id, the asset should be in the same collection as channel
     */
    public function getFeaturedVideo(): ?string
    {
        return $this->featuredVideo;
    }

    /**
     * Sets Featured Video.
     * Video asset id, the asset should be in the same collection as channel
     *
     * @maps featured_video
     */
    public function setFeaturedVideo(?string $featuredVideo): void
    {
        $this->featuredVideo = $featuredVideo;
    }

    /**
     * Returns Password.
     * under channel_settings privacy_type must be "password-protected". Password length should be greater
     * than 5 and lesser than 100 characters.
     */
    public function getPassword(): ?string
    {
        return $this->password;
    }

    /**
     * Sets Password.
     * under channel_settings privacy_type must be "password-protected". Password length should be greater
     * than 5 and lesser than 100 characters.
     *
     * @maps password
     */
    public function setPassword(?string $password): void
    {
        $this->password = $password;
    }

    /**
     * Converts the ChannelSettings2 object to a human-readable string representation.
     *
     * @return string The string representation of the ChannelSettings2 object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'ChannelSettings2',
            [
                'active' => $this->active,
                'description' => $this->description,
                'title' => $this->title,
                'privacyType' => $this->privacyType,
                'featuredVideo' => $this->featuredVideo,
                'password' => $this->password
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->active)) {
            $json['active']         = $this->active;
        }
        if (isset($this->description)) {
            $json['description']    = $this->description;
        }
        if (isset($this->title)) {
            $json['title']          = $this->title;
        }
        if (isset($this->privacyType)) {
            $json['privacy_type']   = PrivacyTypeEnum::checkValue($this->privacyType);
        }
        if (isset($this->featuredVideo)) {
            $json['featured_video'] = $this->featuredVideo;
        }
        if (isset($this->password)) {
            $json['password']       = $this->password;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

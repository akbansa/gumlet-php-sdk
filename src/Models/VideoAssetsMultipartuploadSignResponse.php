<?php

declare(strict_types=1);

/*
 * GumletRestApisLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace GumletRestApisLib\Models;

use GumletRestApisLib\ApiHelper;
use stdClass;

class VideoAssetsMultipartuploadSignResponse implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $assetId;

    /**
     * @var string|null
     */
    private $partNumber;

    /**
     * @var string|null
     */
    private $partUploadUrl;

    /**
     * Returns Asset Id.
     */
    public function getAssetId(): ?string
    {
        return $this->assetId;
    }

    /**
     * Sets Asset Id.
     *
     * @maps asset_id
     */
    public function setAssetId(?string $assetId): void
    {
        $this->assetId = $assetId;
    }

    /**
     * Returns Part Number.
     */
    public function getPartNumber(): ?string
    {
        return $this->partNumber;
    }

    /**
     * Sets Part Number.
     *
     * @maps part_number
     */
    public function setPartNumber(?string $partNumber): void
    {
        $this->partNumber = $partNumber;
    }

    /**
     * Returns Part Upload Url.
     */
    public function getPartUploadUrl(): ?string
    {
        return $this->partUploadUrl;
    }

    /**
     * Sets Part Upload Url.
     *
     * @maps part_upload_url
     */
    public function setPartUploadUrl(?string $partUploadUrl): void
    {
        $this->partUploadUrl = $partUploadUrl;
    }

    /**
     * Converts the VideoAssetsMultipartuploadSignResponse object to a human-readable string representation.
     *
     * @return string The string representation of the VideoAssetsMultipartuploadSignResponse object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'VideoAssetsMultipartuploadSignResponse',
            [
                'assetId' => $this->assetId,
                'partNumber' => $this->partNumber,
                'partUploadUrl' => $this->partUploadUrl
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->assetId)) {
            $json['asset_id']        = $this->assetId;
        }
        if (isset($this->partNumber)) {
            $json['part_number']     = $this->partNumber;
        }
        if (isset($this->partUploadUrl)) {
            $json['part_upload_url'] = $this->partUploadUrl;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
